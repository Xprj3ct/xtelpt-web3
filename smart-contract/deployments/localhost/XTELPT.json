{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        }
      ],
      "name": "RequestedID",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "AllHost",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "AllUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "AllVolun",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Campaign",
      "outputs": [
        {
          "internalType": "address",
          "name": "volunteer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "start_time",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end_time",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Meeting",
      "outputs": [
        {
          "internalType": "address",
          "name": "host",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "UserProfile",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "role",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "rating",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "bio",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "profilePic",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "avaliable",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "volun",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "becomeVolun",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "campaignIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "campaignNum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "counter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rating",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_pic",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_bio",
          "type": "string"
        }
      ],
      "name": "createHost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_time",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "createSchedule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rating",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_pic",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_bio",
          "type": "string"
        }
      ],
      "name": "createUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "endCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllHost",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllUser",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllVolun",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_prof",
          "type": "address"
        }
      ],
      "name": "getCampaign",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "volunteer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "start_time",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end_time",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "completed",
              "type": "bool"
            }
          ],
          "internalType": "struct XTELPT.campaign[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_prof",
          "type": "address"
        }
      ],
      "name": "getMeeting",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "host",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "completed",
              "type": "bool"
            }
          ],
          "internalType": "struct XTELPT.meeting[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAdd",
          "type": "address"
        }
      ],
      "name": "getProfile",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "role",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "rating",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "bio",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "profilePic",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "avaliable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "volun",
              "type": "bool"
            }
          ],
          "internalType": "struct XTELPT.profile",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_host",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "joinMeeting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "meetingIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "meetingNum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "recentCampaignCreator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_lastTimeStamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unVolun",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "v_lastTimeStamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x26e0a6421d49ed7c1a744be09208f4e037f1ca6a887eb60ec638dac7abdb94e2",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "3918512",
    "logsBloom": "0x
    "blockHash": "0x308b9ffaf6f4cb39ec20f36d0375eb132b51d7d1d136317ce4b42c5a2543e6e1",
    "transactionHash": "0x26e0a6421d49ed7c1a744be09208f4e037f1ca6a887eb60ec638dac7abdb94e2",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "3918512",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "5b9da46cd20c134ad5beceaa85278bb4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"RequestedID\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"AllHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"AllUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"AllVolun\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Campaign\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"volunteer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Meeting\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"UserProfile\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"rating\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"profilePic\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"avaliable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"volun\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"becomeVolun\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"campaignIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"campaignNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"counter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rating\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_pic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_bio\",\"type\":\"string\"}],\"name\":\"createHost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"createSchedule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rating\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_pic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_bio\",\"type\":\"string\"}],\"name\":\"createUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"endCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllHost\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllUser\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllVolun\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_prof\",\"type\":\"address\"}],\"name\":\"getCampaign\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"volunteer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"internalType\":\"struct XTELPT.campaign[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_prof\",\"type\":\"address\"}],\"name\":\"getMeeting\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"internalType\":\"struct XTELPT.meeting[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAdd\",\"type\":\"address\"}],\"name\":\"getProfile\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"rating\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"profilePic\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"avaliable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"volun\",\"type\":\"bool\"}],\"internalType\":\"struct XTELPT.profile\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_host\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"joinMeeting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"meetingIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"meetingNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"recentCampaignCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_lastTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unVolun\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"v_lastTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"becomeVolun()\":{\"details\":\"This function `createVolun` allows only the Host to call it hence the `OnlyHost` modifier A host can toggle being a volunteer for campaign mode on, thereby making the profile avaliable for campaign \"},\"checkUpkeep(bytes)\":{\"details\":\"This is the function that the Chainlink Keeper nodes call they look for `upkeepNeeded` to return True. the following should be true for this to return true: 1. It makes sure that the campaign or meeting is not yet completed 2. The time interval has passed for either meeting or campaign.\"},\"constructor\":{\"details\":\"constructor used to assign values that will not change\"},\"createCampaign()\":{\"details\":\"This function `createCampaign` allows only the User to call it hence the `OnlyUser` modifier after which any avaliable volunteer would be assigned to the campaign\"},\"createHost(uint256,string,string,string)\":{\"details\":\"This function `createHost` any body can call this functions and the senders profile would be set to that of a `Host`\"},\"createSchedule(uint256,uint256)\":{\"details\":\"This function `createSchedule` allows only the Host to call it hence the `OnlyHost` modifier after which a Host can create a meeting with some parameters like time and fee needed\"},\"createUser(uint256,string,string,string)\":{\"details\":\"This function `createUser` any body can call this functions and the senders profile would be set to that of a `User`\"},\"endCampaign(address,uint256)\":{\"details\":\"This function `endCampaign` allows only the User end the campaign\"},\"joinMeeting(address,uint256)\":{\"details\":\"This function `joinMeeting` allows only the User to call it hence the `OnlyUser` modifier after which the meeting ID is specified and the user would be assigned to the meeting\"},\"performUpkeep(bytes)\":{\"details\":\"Once `checkUpkeep` is returning `true`, this function is called\"},\"unVolun()\":{\"details\":\"This function `unVolun` allows only the Host to call it hence the `OnlyHost` modifier A host can toggle being a volunteer for campaign mode off, thereby making the profile unavaliable for campaign \"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"meetingNum()\":{\"notice\":\"Getter Functions \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/XTELPT.sol\":\"XTELPT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/XTELPT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.7;\\r\\n// import \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\r\\n\\r\\ninterface KeeperCompatibleInterface {\\r\\n    function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\r\\n    function performUpkeep(bytes calldata performData) external;\\r\\n}\\r\\n\\r\\ncontract XTELPT is  KeeperCompatibleInterface {\\r\\n\\r\\n    enum XTELPState {\\r\\n        OPEN,\\r\\n        CLOSED\\r\\n    }\\r\\n\\r\\n    uint public counter;    \\r\\n    // Use an i_interval in seconds and a timestamp to slow execution of Upkeep\\r\\n    uint private i_interval;\\r\\n    uint public s_lastTimeStamp;\\r\\n    uint public v_lastTimeStamp;\\r\\n\\r\\n\\r\\n    /* string User Types */\\r\\n    string userType = \\\"User\\\";\\r\\n    string hostType = \\\"Host\\\";\\r\\n    string volunType = \\\"Volun\\\";\\r\\n\\r\\n\\r\\n    /* Campaign and Meeting variables */\\r\\n\\r\\n    mapping(address => campaign[]) public Campaign;\\r\\n\\r\\n    mapping(address => meeting[]) public Meeting;\\r\\n\\r\\n    uint256 public campaignIndex;\\r\\n    \\r\\n    uint256 public meetingIndex;    \\r\\n    \\r\\n    /* User profile mapping */\\r\\n    mapping(address => profile) public UserProfile;\\r\\n\\r\\n    /* State mapping */\\r\\n    mapping(address => XTELPState) private s_xtelpState;\\r\\n    mapping(address => XTELPState) private volunState;\\r\\n\\r\\n    /* User Types Arrays */\\r\\n    address [] public AllHost;\\r\\n\\r\\n    address [] public AllVolun;\\r\\n    \\r\\n    address [] public AllUser;\\r\\n\\r\\n    address [] public recentCampaignCreator;\\r\\n\\r\\n\\r\\n    /* Struct */\\r\\n    struct profile {\\r\\n        address addr;\\r\\n        string name;\\r\\n        string role;\\r\\n        uint256 rating;\\r\\n        string bio;\\r\\n        string profilePic;\\r\\n        bool avaliable;\\r\\n        bool volun;\\r\\n    }\\r\\n\\r\\n    struct meeting {\\r\\n        address host;\\r\\n        address user;\\r\\n        uint256 start;\\r\\n        uint256 end;\\r\\n        uint256 time;\\r\\n        uint256 fee;\\r\\n        bool completed;\\r\\n    }\\r\\n    \\r\\n    struct campaign {\\r\\n        address volunteer;\\r\\n        address user;\\r\\n        uint256 start_time;\\r\\n        uint256 end_time;\\r\\n        uint256 fee;\\r\\n        bool completed;\\r\\n    }\\r\\n\\r\\n    /* Modifiers */\\r\\n    modifier onlyHost  {\\r\\n        require(keccak256(abi.encodePacked(UserProfile[msg.sender].role)) == keccak256(abi.encodePacked(\\\"Host\\\")), \\\"NOT A HOST\\\");\\r\\n        _;\\r\\n    }\\r\\n   \\r\\n    modifier onlyVolun  {\\r\\n        require(keccak256(abi.encodePacked(UserProfile[msg.sender].role)) == keccak256(abi.encodePacked(\\\"Host\\\")) && UserProfile[msg.sender].avaliable == true , \\\"NOT A VOLUNTEER\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyUser  {\\r\\n        require(keccak256(abi.encodePacked(UserProfile[msg.sender].role)) == keccak256(abi.encodePacked(\\\"User\\\")), \\\"NOT A USER\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    event RequestedID(uint256 indexed requestId);\\r\\n\\r\\n    /**\\r\\n     * @dev constructor used to assign values that will not change\\r\\n     */\\r\\n    constructor() {\\r\\n      \\r\\n        s_lastTimeStamp = block.timestamp;\\r\\n        v_lastTimeStamp = block.timestamp;\\r\\n        s_xtelpState[msg.sender] = XTELPState.OPEN;\\r\\n        volunState[msg.sender] = XTELPState.OPEN;\\r\\n    }\\r\\n\\r\\n\\r\\n    /**\\r\\n     * @dev This function `createUser` any body can call this functions and the senders profile\\r\\n     * would be set to that of a `User`\\r\\n     */\\r\\n    function createUser(uint256 _rating, string memory _name, string memory _pic, string memory _bio) public {\\r\\n         if(UserProfile[msg.sender].addr == address(0)){\\r\\n            AllUser.push(msg.sender);\\r\\n        }\\r\\n        \\r\\n        UserProfile[msg.sender].addr = msg.sender;\\r\\n        UserProfile[msg.sender].name = _name;\\r\\n        UserProfile[msg.sender].rating = _rating;\\r\\n        UserProfile[msg.sender].role = userType;\\r\\n        UserProfile[msg.sender].profilePic = _pic;\\r\\n        UserProfile[msg.sender].bio = _bio;\\r\\n    }\\r\\n\\r\\n    \\r\\n    /**\\r\\n     * @dev This function `createHost` any body can call this functions and the senders profile\\r\\n     * would be set to that of a `Host`\\r\\n     */\\r\\n    function createHost(uint256 _rating, string memory _name, string memory _pic, string memory _bio) public {  \\r\\n        if(UserProfile[msg.sender].addr == address(0)){\\r\\n            AllHost.push(msg.sender);\\r\\n        }\\r\\n        \\r\\n        s_xtelpState[msg.sender] = XTELPState.OPEN;\\r\\n\\r\\n        UserProfile[msg.sender].addr = msg.sender;\\r\\n        UserProfile[msg.sender].name = _name;\\r\\n        UserProfile[msg.sender].rating = _rating;\\r\\n        UserProfile[msg.sender].role = hostType;\\r\\n        UserProfile[msg.sender].profilePic = _pic;\\r\\n        UserProfile[msg.sender].bio = _bio;\\r\\n    }\\r\\n\\r\\n     /**\\r\\n     * @dev This function `createVolun` allows only the Host to call it hence the `OnlyHost` modifier\\r\\n     * A host can toggle being a volunteer for campaign mode on, thereby making the profile avaliable for campaign \\r\\n     */\\r\\n     function becomeVolun() public onlyHost {\\r\\n        if(UserProfile[msg.sender].volun == false){\\r\\n            AllVolun.push(msg.sender);\\r\\n        }\\r\\n       \\r\\n        UserProfile[msg.sender].volun = true;\\r\\n        UserProfile[msg.sender].avaliable = true;\\r\\n    }\\r\\n\\r\\n\\r\\n    /**\\r\\n     * @dev This function `unVolun` allows only the Host to call it hence the `OnlyHost` modifier\\r\\n     * A host can toggle being a volunteer for campaign mode off, thereby making the profile unavaliable for campaign \\r\\n     */\\r\\n    function unVolun() public onlyHost {       \\r\\n        UserProfile[msg.sender].volun = false;\\r\\n        UserProfile[msg.sender].avaliable = false;\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev This function `createSchedule` allows only the Host to call it hence the `OnlyHost` modifier\\r\\n     * after which a Host can create a meeting with some parameters like time and fee needed\\r\\n     */\\r\\n    function createSchedule(uint256 _time, uint256 _fee) public onlyHost {\\r\\n        meetingIndex ++;\\r\\n        \\r\\n        meeting memory NewMeeting;\\r\\n        NewMeeting.host = msg.sender;\\r\\n        NewMeeting.time = _time * 60;\\r\\n        NewMeeting.start = block.timestamp;\\r\\n        NewMeeting.fee = _fee;\\r\\n\\r\\n        i_interval = _time * 60;\\r\\n        s_xtelpState[msg.sender] = XTELPState.OPEN;\\r\\n\\r\\n        Meeting[msg.sender].push(NewMeeting);\\r\\n      \\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev This function `joinMeeting` allows only the User to call it hence the `OnlyUser` modifier\\r\\n     * after which the meeting ID is specified and the user would be assigned to the meeting\\r\\n     */\\r\\n    function joinMeeting(address _host, uint256 _id) public onlyUser {\\r\\n        Meeting[_host][_id].user = msg.sender;\\r\\n    } \\r\\n\\r\\n    /**\\r\\n     * @dev This function `createCampaign` allows only the User to call it hence the `OnlyUser` modifier\\r\\n     * after which any avaliable volunteer would be assigned to the campaign\\r\\n     */\\r\\n    function createCampaign() public onlyUser {\\r\\n        campaignIndex ++;\\r\\n\\r\\n        campaign memory NewCampaign;\\r\\n        NewCampaign.user = msg.sender;\\r\\n        NewCampaign.start_time = block.timestamp;\\r\\n        NewCampaign.fee = 0;\\r\\n\\r\\n        i_interval = 1;\\r\\n        s_xtelpState[msg.sender] = XTELPState.OPEN;\\r\\n\\r\\n        for(uint i = 0; i < AllVolun.length; i++){\\r\\n            if(UserProfile[AllVolun[i]].avaliable == true){\\r\\n                NewCampaign.volunteer = AllVolun[i];\\r\\n                UserProfile[AllVolun[i]].avaliable = false;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        Campaign[msg.sender].push(NewCampaign);\\r\\n      \\r\\n    }\\r\\n\\r\\n\\r\\n    /**\\r\\n     * @dev This function `endCampaign` allows only the User end the campaign\\r\\n     */\\r\\n    function endCampaign(address _user, uint256 _id) public onlyUser {\\r\\n       Campaign[_user][_id].completed = true;\\r\\n       Campaign[_user][_id].end_time = block.timestamp;\\r\\n    }\\r\\n\\r\\n\\r\\n      \\r\\n\\r\\n\\r\\n    /**\\r\\n     * @dev This is the function that the Chainlink Keeper nodes call\\r\\n     * they look for `upkeepNeeded` to return True.\\r\\n     * the following should be true for this to return true:\\r\\n     * 1. It makes sure that the campaign or meeting is not yet completed\\r\\n     * 2. The time interval has passed for either meeting or campaign.\\r\\n     */\\r\\n   \\r\\n   function checkUpkeep(bytes memory /* checkData */) public view override returns ( bool upkeepNeeded,\\r\\n    bytes memory /* performData */  ) {\\r\\n        \\r\\n        for (uint i = 0; i < AllHost.length; i++) {\\r\\n            for (uint j = 0; j < Meeting[AllHost[i]].length; j++) {\\r\\n                if(Meeting[AllHost[i]][j].time > 0 && Meeting[AllHost[i]][j].completed == false){\\r\\n                    bool isOpen = XTELPState.OPEN == s_xtelpState[msg.sender];\\r\\n                    bool timePassed = ((block.timestamp - Meeting[AllHost[i]][j].start) >  Meeting[AllHost[i]][j].time);\\r\\n                    upkeepNeeded = (isOpen && timePassed);\\r\\n                }\\r\\n                \\r\\n            }\\r\\n        }\\r\\n       \\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Once `checkUpkeep` is returning `true`, this function is called\\r\\n     */\\r\\n    function performUpkeep(bytes calldata /*performData*/) external override {\\r\\n\\r\\n        for (uint i = 0; i < AllHost.length; i++) {\\r\\n            for (uint j = 0; j < Meeting[AllHost[i]].length; j++) {\\r\\n               (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\r\\n                require(upkeepNeeded, \\\"Doesn't meet requirement for UpKeep\\\");\\r\\n                Meeting[AllHost[i]][j].completed = true;\\r\\n                Meeting[AllHost[i]][j].end = block.timestamp;\\r\\n                s_xtelpState[AllHost[i]] = XTELPState.CLOSED;\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        \\r\\n        \\r\\n    }\\r\\n   \\r\\n   \\r\\n    /** Getter Functions */\\r\\n\\r\\n    function meetingNum() public view returns (uint256) {\\r\\n        return meetingIndex;\\r\\n    }\\r\\n    \\r\\n    function campaignNum() public view returns (uint256) {\\r\\n        return campaignIndex;\\r\\n    }\\r\\n\\r\\n    function getMeeting(address _prof) public view returns (meeting [] memory) {\\r\\n        return Meeting[_prof];\\r\\n    }\\r\\n    \\r\\n    function getCampaign(address _prof) public view returns (campaign [] memory) {\\r\\n        return Campaign[_prof];\\r\\n    }\\r\\n    \\r\\n\\r\\n    function getProfile(address userAdd) public view returns (profile memory) {\\r\\n        return UserProfile[userAdd];\\r\\n    }\\r\\n\\r\\n    function getAllHost() public view returns (address [] memory) {\\r\\n        return AllHost;\\r\\n    }\\r\\n    \\r\\n    function getAllUser() public view returns (address [] memory) {\\r\\n        return AllUser;\\r\\n    }\\r\\n    \\r\\n    function getAllVolun() public view returns (address [] memory) {\\r\\n        return AllVolun;\\r\\n    }\\r\\n\\r\\n   \\r\\n}\",\"keccak256\":\"0xbb5354cfb7db48f5ae3e214b7701c55676ebe12f5d83568ef842d67fd7908581\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c8063680908c911610104578063841a8a7e116100a2578063cb40bf6011610071578063cb40bf601461057b578063d7358c5e14610597578063f40c48c0146105ce578063fc16198d146105d8576101da565b8063841a8a7e146104df57806396777e8d1461050f578063b16cfdd41461052d578063c5e0cfd01461055d576101da565b8063766c21a2116100de578063766c21a2146104595780637d74311c14610477578063812f2f3314610493578063834e6e89146104af576101da565b8063680908c9146103da5780636e04ff0d146103f8578063731301cf14610429576101da565b80634585e33b1161017c57806356361f0d1161014b57806356361f0d1461037857806361bc221a146103965780636201fe69146103b45780636377e020146103be576101da565b80634585e33b1461030457806345f36eb814610320578063462d71ff1461035057806347531df81461035a576101da565b80632615749c116101b85780632615749c1461025d57806327a980a81461027b5780632dd47fc9146102b057806334854043146102e6576101da565b80630f53a470146101df5780631007e8c71461020f57806324b9ed2d1461022d575b600080fd5b6101f960048036038101906101f4919061336a565b6105f4565b6040516102069190613db4565b60405180910390f35b61021761092c565b6040516102249190613dd6565b60405180910390f35b6102476004803603810190610242919061336a565b610932565b6040516102549190613d02565b60405180910390f35b610265610abf565b6040516102729190613cbe565b60405180910390f35b61029560048036038101906102909190613397565b610b4d565b6040516102a796959493929190613b54565b60405180910390f35b6102ca60048036038101906102c59190613397565b610bf3565b6040516102dd9796959493929190613bb5565b60405180910390f35b6102ee610c9f565b6040516102fb9190613dd6565b60405180910390f35b61031e600480360381019061031991906133d7565b610ca5565b005b61033a6004803603810190610335919061346d565b610fce565b6040516103479190613b39565b60405180910390f35b61035861100d565b005b610362611192565b60405161036f9190613cbe565b60405180910390f35b610380611220565b60405161038d9190613dd6565b60405180910390f35b61039e611226565b6040516103ab9190613dd6565b60405180910390f35b6103bc61122c565b005b6103d860048036038101906103d39190613397565b6116e1565b005b6103e2611894565b6040516103ef9190613dd6565b60405180910390f35b610412600480360381019061040d9190613424565b61189e565b604051610420929190613d24565b60405180910390f35b610443600480360381019061043e919061336a565b611ca9565b6040516104509190613ce0565b60405180910390f35b610461611e2c565b60405161046e9190613dd6565b60405180910390f35b610491600480360381019061048c919061349a565b611e32565b005b6104ad60048036038101906104a89190613555565b61215c565b005b6104c960048036038101906104c4919061346d565b61246c565b6040516104d69190613b39565b60405180910390f35b6104f960048036038101906104f4919061346d565b6124ab565b6040516105069190613b39565b60405180910390f35b6105176124ea565b6040516105249190613cbe565b60405180910390f35b6105476004803603810190610542919061346d565b612578565b6040516105549190613b39565b60405180910390f35b6105656125b7565b6040516105729190613dd6565b60405180910390f35b61059560048036038101906105909190613397565b6125c1565b005b6105b160048036038101906105ac919061336a565b612733565b6040516105c5989796959493929190613c24565b60405180910390f35b6105d66129d5565b005b6105f260048036038101906105ed919061349a565b612c1a565b005b6105fc612fac565b600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546106ad906140a4565b80601f01602080910402602001604051908101604052809291908181526020018280546106d9906140a4565b80156107265780601f106106fb57610100808354040283529160200191610726565b820191906000526020600020905b81548152906001019060200180831161070957829003601f168201915b5050505050815260200160028201805461073f906140a4565b80601f016020809104026020016040519081016040528092919081815260200182805461076b906140a4565b80156107b85780601f1061078d576101008083540402835291602001916107b8565b820191906000526020600020905b81548152906001019060200180831161079b57829003601f168201915b50505050508152602001600382015481526020016004820180546107db906140a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610807906140a4565b80156108545780601f1061082957610100808354040283529160200191610854565b820191906000526020600020905b81548152906001019060200180831161083757829003601f168201915b5050505050815260200160058201805461086d906140a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610899906140a4565b80156108e65780601f106108bb576101008083540402835291602001916108e6565b820191906000526020600020905b8154815290600101906020018083116108c957829003601f168201915b505050505081526020016006820160009054906101000a900460ff161515151581526020016006820160019054906101000a900460ff1615151515815250509050919050565b60035481565b6060600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610ab457838290600052602060002090600702016040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff16151515158152505081526020019060010190610993565b505050509050919050565b6060600f805480602002602001604051908101604052809291908181526020018280548015610b4357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610af9575b5050505050905090565b60076020528160005260406000208181548110610b6957600080fd5b9060005260206000209060060201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050160009054906101000a900460ff16905086565b60086020528160005260406000208181548110610c0f57600080fd5b9060005260206000209060070201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050154908060060160009054906101000a900460ff16905087565b60025481565b60005b600e80549050811015610fc95760005b60086000600e8481548110610cd057610ccf6141dd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015610fb5576000610d5a6040518060200160405280600081525061189e565b50905080610d9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9490613d74565b60405180910390fd5b600160086000600e8681548110610db757610db66141dd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110610e2e57610e2d6141dd565b5b906000526020600020906007020160060160006101000a81548160ff0219169083151502179055504260086000600e8681548110610e6f57610e6e6141dd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110610ee657610ee56141dd565b5b9060005260206000209060070201600301819055506001600c6000600e8681548110610f1557610f146141dd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836001811115610f9c57610f9b61417f565b5b0217905550508080610fad90614107565b915050610cb8565b508080610fc190614107565b915050610ca8565b505050565b600e8181548110610fde57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60405160200161101c90613b24565b60405160208183030381529060405280519060200120600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016040516020016110849190613af8565b60405160208183030381529060405280519060200120146110da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d190613d94565b60405180910390fd5b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160016101000a81548160ff0219169083151502179055506000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160006101000a81548160ff021916908315150217905550565b6060601080548060200260200160405190810160405280929190818152602001828054801561121657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116111cc575b5050505050905090565b60095481565b60005481565b60405160200161123b90613b0f565b60405160208183030381529060405280519060200120600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016040516020016112a39190613af8565b60405160208183030381529060405280519060200120146112f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f090613d54565b60405180910390fd5b6009600081548092919061130c90614107565b919050555061131961300b565b33816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050428160400181815250506000816080018181525050600180819055506000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360018111156113d0576113cf61417f565b5b021790555060005b600f805490508110156115a65760011515600b6000600f8481548110611401576114006141dd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160009054906101000a900460ff161515141561159357600f8181548110611493576114926141dd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000600b6000600f848154811061150f5761150e6141dd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160006101000a81548160ff0219169083151502179055506115a6565b808061159e90614107565b9150506113d8565b50600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff021916908315150217905550505050565b6040516020016116f090613b0f565b60405160208183030381529060405280519060200120600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016040516020016117589190613af8565b60405160208183030381529060405280519060200120146117ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a590613d54565b60405180910390fd5b6001600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611801576118006141dd565b5b906000526020600020906006020160050160006101000a81548160ff02191690831515021790555042600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061187b5761187a6141dd565b5b9060005260206000209060060201600301819055505050565b6000600a54905090565b6000606060005b600e80549050811015611ca35760005b60086000600e84815481106118cd576118cc6141dd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015611c8f57600060086000600e8581548110611957576119566141dd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106119ce576119cd6141dd565b5b906000526020600020906007020160040154118015611a9e57506000151560086000600e8581548110611a0457611a036141dd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611a7b57611a7a6141dd565b5b906000526020600020906007020160060160009054906101000a900460ff161515145b15611c7c576000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166001811115611b0457611b0361417f565b5b60006001811115611b1857611b1761417f565b5b149050600060086000600e8681548110611b3557611b346141dd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611bac57611bab6141dd565b5b90600052602060002090600702016004015460086000600e8781548110611bd657611bd56141dd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110611c4d57611c4c6141dd565b5b90600052602060002090600702016002015442611c6a9190613fe6565b119050818015611c775750805b955050505b8080611c8790614107565b9150506118b5565b508080611c9b90614107565b9150506118a5565b50915091565b6060600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611e2157838290600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16151515158152505081526020019060010190611d0a565b505050509050919050565b600a5481565b600073ffffffffffffffffffffffffffffffffffffffff16600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611f2d576010339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b33600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101908051906020019061200492919061306f565b5083600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506004600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020190805461209c906140a4565b6120a79291906130f5565b5081600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050190805190602001906120fe92919061306f565b5080600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401908051906020019061215592919061306f565b5050505050565b60405160200161216b90613b24565b60405160208183030381529060405280519060200120600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016040516020016121d39190613af8565b6040516020818303038152906040528051906020012014612229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161222090613d94565b60405180910390fd5b600a600081548092919061223c90614107565b9190505550612249613182565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050603c8361228e9190613f8c565b81608001818152505042816040018181525050818160a0018181525050603c836122b89190613f8c565b6001819055506000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360018111156123215761232061417f565b5b0217905550600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff0219169083151502179055505050505050565b6010818154811061247c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600f81815481106124bb57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600e80548060200260200160405190810160405280929190818152602001828054801561256e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612524575b5050505050905090565b6011818154811061258857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600954905090565b6040516020016125d090613b0f565b60405160208183030381529060405280519060200120600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016040516020016126389190613af8565b604051602081830303815290604052805190602001201461268e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161268590613d54565b60405180910390fd5b33600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106126e0576126df6141dd565b5b906000526020600020906007020160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600b6020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461277c906140a4565b80601f01602080910402602001604051908101604052809291908181526020018280546127a8906140a4565b80156127f55780601f106127ca576101008083540402835291602001916127f5565b820191906000526020600020905b8154815290600101906020018083116127d857829003601f168201915b50505050509080600201805461280a906140a4565b80601f0160208091040260200160405190810160405280929190818152602001828054612836906140a4565b80156128835780601f1061285857610100808354040283529160200191612883565b820191906000526020600020905b81548152906001019060200180831161286657829003601f168201915b50505050509080600301549080600401805461289e906140a4565b80601f01602080910402602001604051908101604052809291908181526020018280546128ca906140a4565b80156129175780601f106128ec57610100808354040283529160200191612917565b820191906000526020600020905b8154815290600101906020018083116128fa57829003601f168201915b50505050509080600501805461292c906140a4565b80601f0160208091040260200160405190810160405280929190818152602001828054612958906140a4565b80156129a55780601f1061297a576101008083540402835291602001916129a5565b820191906000526020600020905b81548152906001019060200180831161298857829003601f168201915b5050505050908060060160009054906101000a900460ff16908060060160019054906101000a900460ff16905088565b6040516020016129e490613b24565b60405160208183030381529060405280519060200120600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201604051602001612a4c9190613af8565b6040516020818303038152906040528051906020012014612aa2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a9990613d94565b60405180910390fd5b60001515600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160019054906101000a900460ff1615151415612b6257600f339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6001600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160016101000a81548160ff0219169083151502179055506001600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160006101000a81548160ff021916908315150217905550565b600073ffffffffffffffffffffffffffffffffffffffff16600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612d1557600e339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836001811115612d7857612d7761417f565b5b021790555033600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019080519060200190612e5492919061306f565b5083600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506005600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201908054612eec906140a4565b612ef79291906130f5565b5081600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005019080519060200190612f4e92919061306f565b5080600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004019080519060200190612fa592919061306f565b5050505050565b604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160608152602001606081526020016000151581526020016000151581525090565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000151581525090565b82805461307b906140a4565b90600052602060002090601f01602090048101928261309d57600085556130e4565b82601f106130b657805160ff19168380011785556130e4565b828001600101855582156130e4579182015b828111156130e35782518255916020019190600101906130c8565b5b5090506130f191906131ed565b5090565b828054613101906140a4565b90600052602060002090601f0160209004810192826131235760008555613171565b82601f106131345780548555613171565b8280016001018555821561317157600052602060002091601f016020900482015b82811115613170578254825591600101919060010190613155565b5b50905061317e91906131ed565b5090565b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000151581525090565b5b808211156132065760008160009055506001016131ee565b5090565b600061321d61321884613e16565b613df1565b9050828152602081018484840111156132395761323861424a565b5b613244848285614062565b509392505050565b600061325f61325a84613e47565b613df1565b90508281526020810184848401111561327b5761327a61424a565b5b613286848285614062565b509392505050565b60008135905061329d8161435d565b92915050565b60008083601f8401126132b9576132b8614240565b5b8235905067ffffffffffffffff8111156132d6576132d561423b565b5b6020830191508360018202830111156132f2576132f1614245565b5b9250929050565b600082601f83011261330e5761330d614240565b5b813561331e84826020860161320a565b91505092915050565b600082601f83011261333c5761333b614240565b5b813561334c84826020860161324c565b91505092915050565b60008135905061336481614374565b92915050565b6000602082840312156133805761337f614254565b5b600061338e8482850161328e565b91505092915050565b600080604083850312156133ae576133ad614254565b5b60006133bc8582860161328e565b92505060206133cd85828601613355565b9150509250929050565b600080602083850312156133ee576133ed614254565b5b600083013567ffffffffffffffff81111561340c5761340b61424f565b5b613418858286016132a3565b92509250509250929050565b60006020828403121561343a57613439614254565b5b600082013567ffffffffffffffff8111156134585761345761424f565b5b613464848285016132f9565b91505092915050565b60006020828403121561348357613482614254565b5b600061349184828501613355565b91505092915050565b600080600080608085870312156134b4576134b3614254565b5b60006134c287828801613355565b945050602085013567ffffffffffffffff8111156134e3576134e261424f565b5b6134ef87828801613327565b935050604085013567ffffffffffffffff8111156135105761350f61424f565b5b61351c87828801613327565b925050606085013567ffffffffffffffff81111561353d5761353c61424f565b5b61354987828801613327565b91505092959194509250565b6000806040838503121561356c5761356b614254565b5b600061357a85828601613355565b925050602061358b85828601613355565b9150509250929050565b60006135a183836135dd565b60208301905092915050565b60006135b9838361390c565b60c08301905092915050565b60006135d18383613987565b60e08301905092915050565b6135e68161401a565b82525050565b6135f58161401a565b82525050565b600061360682613ebd565b6136108185613f1b565b935061361b83613e78565b8060005b8381101561364c5781516136338882613595565b975061363e83613ef4565b92505060018101905061361f565b5085935050505092915050565b600061366482613ec8565b61366e8185613f2c565b935061367983613e88565b8060005b838110156136aa57815161369188826135ad565b975061369c83613f01565b92505060018101905061367d565b5085935050505092915050565b60006136c282613ed3565b6136cc8185613f3d565b93506136d783613e98565b8060005b838110156137085781516136ef88826135c5565b97506136fa83613f0e565b9250506001810190506136db565b5085935050505092915050565b61371e8161402c565b82525050565b61372d8161402c565b82525050565b600061373e82613ede565b6137488185613f4e565b9350613758818560208601614071565b61376181614259565b840191505092915050565b600061377782613ee9565b6137818185613f5f565b9350613791818560208601614071565b61379a81614259565b840191505092915050565b60006137b082613ee9565b6137ba8185613f70565b93506137ca818560208601614071565b6137d381614259565b840191505092915050565b600081546137eb816140a4565b6137f58186613f81565b94506001821660008114613810576001811461382157613854565b60ff19831686528186019350613854565b61382a85613ea8565b60005b8381101561384c5781548189015260018201915060208101905061382d565b838801955050505b50505092915050565b600061386a600a83613f70565b91506138758261426a565b602082019050919050565b600061388d600483613f81565b915061389882614293565b600482019050919050565b60006138b0602383613f70565b91506138bb826142bc565b604082019050919050565b60006138d3600483613f81565b91506138de8261430b565b600482019050919050565b60006138f6600a83613f70565b915061390182614334565b602082019050919050565b60c08201600082015161392260008501826135dd565b50602082015161393560208501826135dd565b5060408201516139486040850182613ada565b50606082015161395b6060850182613ada565b50608082015161396e6080850182613ada565b5060a082015161398160a0850182613715565b50505050565b60e08201600082015161399d60008501826135dd565b5060208201516139b060208501826135dd565b5060408201516139c36040850182613ada565b5060608201516139d66060850182613ada565b5060808201516139e96080850182613ada565b5060a08201516139fc60a0850182613ada565b5060c0820151613a0f60c0850182613715565b50505050565b600061010083016000830151613a2e60008601826135dd565b5060208301518482036020860152613a46828261376c565b91505060408301518482036040860152613a60828261376c565b9150506060830151613a756060860182613ada565b5060808301518482036080860152613a8d828261376c565b91505060a083015184820360a0860152613aa7828261376c565b91505060c0830151613abc60c0860182613715565b5060e0830151613acf60e0860182613715565b508091505092915050565b613ae381614058565b82525050565b613af281614058565b82525050565b6000613b0482846137de565b915081905092915050565b6000613b1a82613880565b9150819050919050565b6000613b2f826138c6565b9150819050919050565b6000602082019050613b4e60008301846135ec565b92915050565b600060c082019050613b6960008301896135ec565b613b7660208301886135ec565b613b836040830187613ae9565b613b906060830186613ae9565b613b9d6080830185613ae9565b613baa60a0830184613724565b979650505050505050565b600060e082019050613bca600083018a6135ec565b613bd760208301896135ec565b613be46040830188613ae9565b613bf16060830187613ae9565b613bfe6080830186613ae9565b613c0b60a0830185613ae9565b613c1860c0830184613724565b98975050505050505050565b600061010082019050613c3a600083018b6135ec565b8181036020830152613c4c818a6137a5565b90508181036040830152613c6081896137a5565b9050613c6f6060830188613ae9565b8181036080830152613c8181876137a5565b905081810360a0830152613c9581866137a5565b9050613ca460c0830185613724565b613cb160e0830184613724565b9998505050505050505050565b60006020820190508181036000830152613cd881846135fb565b905092915050565b60006020820190508181036000830152613cfa8184613659565b905092915050565b60006020820190508181036000830152613d1c81846136b7565b905092915050565b6000604082019050613d396000830185613724565b8181036020830152613d4b8184613733565b90509392505050565b60006020820190508181036000830152613d6d8161385d565b9050919050565b60006020820190508181036000830152613d8d816138a3565b9050919050565b60006020820190508181036000830152613dad816138e9565b9050919050565b60006020820190508181036000830152613dce8184613a15565b905092915050565b6000602082019050613deb6000830184613ae9565b92915050565b6000613dfb613e0c565b9050613e0782826140d6565b919050565b6000604051905090565b600067ffffffffffffffff821115613e3157613e3061420c565b5b613e3a82614259565b9050602081019050919050565b600067ffffffffffffffff821115613e6257613e6161420c565b5b613e6b82614259565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000613f9782614058565b9150613fa283614058565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613fdb57613fda614150565b5b828202905092915050565b6000613ff182614058565b9150613ffc83614058565b92508282101561400f5761400e614150565b5b828203905092915050565b600061402582614038565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561408f578082015181840152602081019050614074565b8381111561409e576000848401525b50505050565b600060028204905060018216806140bc57607f821691505b602082108114156140d0576140cf6141ae565b5b50919050565b6140df82614259565b810181811067ffffffffffffffff821117156140fe576140fd61420c565b5b80604052505050565b600061411282614058565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561414557614144614150565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e4f542041205553455200000000000000000000000000000000000000000000600082015250565b7f5573657200000000000000000000000000000000000000000000000000000000600082015250565b7f446f65736e2774206d65657420726571756972656d656e7420666f722055704b60008201527f6565700000000000000000000000000000000000000000000000000000000000602082015250565b7f486f737400000000000000000000000000000000000000000000000000000000600082015250565b7f4e4f54204120484f535400000000000000000000000000000000000000000000600082015250565b6143668161401a565b811461437157600080fd5b50565b61437d81614058565b811461438857600080fd5b5056fea2646970667358221220f3cf566170dedff1dd4dab5aafd2f227d95227c88ec7aa73fca623cadbab21f164736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "becomeVolun()": {
        "details": "This function `createVolun` allows only the Host to call it hence the `OnlyHost` modifier A host can toggle being a volunteer for campaign mode on, thereby making the profile avaliable for campaign "
      },
      "checkUpkeep(bytes)": {
        "details": "This is the function that the Chainlink Keeper nodes call they look for `upkeepNeeded` to return True. the following should be true for this to return true: 1. It makes sure that the campaign or meeting is not yet completed 2. The time interval has passed for either meeting or campaign."
      },
      "constructor": {
        "details": "constructor used to assign values that will not change"
      },
      "createCampaign()": {
        "details": "This function `createCampaign` allows only the User to call it hence the `OnlyUser` modifier after which any avaliable volunteer would be assigned to the campaign"
      },
      "createHost(uint256,string,string,string)": {
        "details": "This function `createHost` any body can call this functions and the senders profile would be set to that of a `Host`"
      },
      "createSchedule(uint256,uint256)": {
        "details": "This function `createSchedule` allows only the Host to call it hence the `OnlyHost` modifier after which a Host can create a meeting with some parameters like time and fee needed"
      },
      "createUser(uint256,string,string,string)": {
        "details": "This function `createUser` any body can call this functions and the senders profile would be set to that of a `User`"
      },
      "endCampaign(address,uint256)": {
        "details": "This function `endCampaign` allows only the User end the campaign"
      },
      "joinMeeting(address,uint256)": {
        "details": "This function `joinMeeting` allows only the User to call it hence the `OnlyUser` modifier after which the meeting ID is specified and the user would be assigned to the meeting"
      },
      "performUpkeep(bytes)": {
        "details": "Once `checkUpkeep` is returning `true`, this function is called"
      },
      "unVolun()": {
        "details": "This function `unVolun` allows only the Host to call it hence the `OnlyHost` modifier A host can toggle being a volunteer for campaign mode off, thereby making the profile unavaliable for campaign "
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "meetingNum()": {
        "notice": "Getter Functions "
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 23,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "counter",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 25,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "i_interval",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 27,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "s_lastTimeStamp",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 29,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "v_lastTimeStamp",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 32,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "userType",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 35,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "hostType",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      },
      {
        "astId": 38,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "volunType",
        "offset": 0,
        "slot": "6",
        "type": "t_string_storage"
      },
      {
        "astId": 44,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "Campaign",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_array(t_struct(campaign)126_storage)dyn_storage)"
      },
      {
        "astId": 50,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "Meeting",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_array(t_struct(meeting)113_storage)dyn_storage)"
      },
      {
        "astId": 52,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "campaignIndex",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 54,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "meetingIndex",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 59,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "UserProfile",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_struct(profile)98_storage)"
      },
      {
        "astId": 64,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "s_xtelpState",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_enum(XTELPState)21)"
      },
      {
        "astId": 69,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "volunState",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_enum(XTELPState)21)"
      },
      {
        "astId": 72,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "AllHost",
        "offset": 0,
        "slot": "14",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 75,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "AllVolun",
        "offset": 0,
        "slot": "15",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 78,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "AllUser",
        "offset": 0,
        "slot": "16",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 81,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "recentCampaignCreator",
        "offset": 0,
        "slot": "17",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(campaign)126_storage)dyn_storage": {
        "base": "t_struct(campaign)126_storage",
        "encoding": "dynamic_array",
        "label": "struct XTELPT.campaign[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(meeting)113_storage)dyn_storage": {
        "base": "t_struct(meeting)113_storage",
        "encoding": "dynamic_array",
        "label": "struct XTELPT.meeting[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(XTELPState)21": {
        "encoding": "inplace",
        "label": "enum XTELPT.XTELPState",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_struct(campaign)126_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct XTELPT.campaign[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(campaign)126_storage)dyn_storage"
      },
      "t_mapping(t_address,t_array(t_struct(meeting)113_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct XTELPT.meeting[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(meeting)113_storage)dyn_storage"
      },
      "t_mapping(t_address,t_enum(XTELPState)21)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => enum XTELPT.XTELPState)",
        "numberOfBytes": "32",
        "value": "t_enum(XTELPState)21"
      },
      "t_mapping(t_address,t_struct(profile)98_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct XTELPT.profile)",
        "numberOfBytes": "32",
        "value": "t_struct(profile)98_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(campaign)126_storage": {
        "encoding": "inplace",
        "label": "struct XTELPT.campaign",
        "members": [
          {
            "astId": 115,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "volunteer",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 117,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "user",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 119,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "start_time",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 121,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "end_time",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 123,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "fee",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 125,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "completed",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(meeting)113_storage": {
        "encoding": "inplace",
        "label": "struct XTELPT.meeting",
        "members": [
          {
            "astId": 100,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "host",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 102,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "user",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 104,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "start",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 106,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "end",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 108,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "time",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 110,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "fee",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 112,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "completed",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(profile)98_storage": {
        "encoding": "inplace",
        "label": "struct XTELPT.profile",
        "members": [
          {
            "astId": 83,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 85,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 87,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "role",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 89,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "rating",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 91,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "bio",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 93,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "profilePic",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 95,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "avaliable",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 97,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "volun",
            "offset": 1,
            "slot": "6",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}