{
  "address": "0x7aD928627634055f32129C1bf22AB689006EF293",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        }
      ],
      "name": "RequestedID",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "AllAccount",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Campaign",
      "outputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "start_time",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end_time",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "desc",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Meeting",
      "outputs": [
        {
          "internalType": "address",
          "name": "host",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "desc",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "UserProfile",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "role",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "rating",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "bio",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "profilePic",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "avaliable",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "volun",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "becomeVolun",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "campaignIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "campaignNum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "counter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_desc",
          "type": "string"
        }
      ],
      "name": "createCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rating",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_pic",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_bio",
          "type": "string"
        }
      ],
      "name": "createHost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_time",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_desc",
          "type": "string"
        }
      ],
      "name": "createSchedule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rating",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_pic",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_bio",
          "type": "string"
        }
      ],
      "name": "createUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "endCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllAccount",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCampaign",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address[]",
              "name": "volunteer",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "start_time",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end_time",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "completed",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "desc",
              "type": "string"
            }
          ],
          "internalType": "struct XTELPT.campaign[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getHelp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_prof",
          "type": "address"
        }
      ],
      "name": "getMeeting",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "host",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "desc",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "completed",
              "type": "bool"
            }
          ],
          "internalType": "struct XTELPT.meeting[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAdd",
          "type": "address"
        }
      ],
      "name": "getProfile",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "role",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "rating",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "bio",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "profilePic",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "avaliable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "volun",
              "type": "bool"
            }
          ],
          "internalType": "struct XTELPT.profile",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "joinCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_host",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "joinMeeting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "meetingIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "meetingNum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "recentCampaignCreator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_lastTimeStamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unVolun",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "v_lastTimeStamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x16a0d86af5d2fe64983281caefc78b7b4b293ef554e53fe609e8b85d9e8b61b4",
  "receipt": {
    "to": null,
    "from": "0xe431d300d25eDB84d32f67b7bdaeC56F03af4d03",
    "contractAddress": "0x7aD928627634055f32129C1bf22AB689006EF293",
    "transactionIndex": 29,
    "gasUsed": "4149764",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000800000000000000000000100000000004000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000080000000000000000000200000000400000004000000000000000000000000000000000000000000004000000000000000000001000000000000000000000000000000100040100000000000000000000000000000000000000000000000000000000000000000100000",
    "blockHash": "0x1116e615558a9525fe90a57d35f2b01ed66db5eeef8a848aa17f9dfcd75baf15",
    "transactionHash": "0x16a0d86af5d2fe64983281caefc78b7b4b293ef554e53fe609e8b85d9e8b61b4",
    "logs": [
      {
        "transactionIndex": 29,
        "blockNumber": 29027356,
        "transactionHash": "0x16a0d86af5d2fe64983281caefc78b7b4b293ef554e53fe609e8b85d9e8b61b4",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000e431d300d25edb84d32f67b7bdaec56f03af4d03",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000161d48553017f8000000000000000000000000000000000000000000000000086b2477956d83b900000000000000000000000000000000000000000000273d86bc4e42bb7f592f0000000000000000000000000000000000000000000000000855072f403d6bc100000000000000000000000000000000000000000000273d86d26b8b10af7127",
        "logIndex": 103,
        "blockHash": "0x1116e615558a9525fe90a57d35f2b01ed66db5eeef8a848aa17f9dfcd75baf15"
      }
    ],
    "blockNumber": 29027356,
    "cumulativeGasUsed": "6686738",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 12,
  "solcInputHash": "a650a66c73b286db21ff1b0ab6893512",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"RequestedID\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"AllAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Campaign\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"desc\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Meeting\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"desc\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"UserProfile\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"rating\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"profilePic\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"avaliable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"volun\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"becomeVolun\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"campaignIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"campaignNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"counter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_desc\",\"type\":\"string\"}],\"name\":\"createCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rating\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_pic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_bio\",\"type\":\"string\"}],\"name\":\"createHost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_desc\",\"type\":\"string\"}],\"name\":\"createSchedule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rating\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_pic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_bio\",\"type\":\"string\"}],\"name\":\"createUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"endCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAccount\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCampaign\",\"outputs\":[{\"components\":[{\"internalType\":\"address[]\",\"name\":\"volunteer\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"desc\",\"type\":\"string\"}],\"internalType\":\"struct XTELPT.campaign[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getHelp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_prof\",\"type\":\"address\"}],\"name\":\"getMeeting\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"desc\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"internalType\":\"struct XTELPT.meeting[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAdd\",\"type\":\"address\"}],\"name\":\"getProfile\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"rating\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"profilePic\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"avaliable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"volun\",\"type\":\"bool\"}],\"internalType\":\"struct XTELPT.profile\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"joinCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_host\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"joinMeeting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"meetingIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"meetingNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"recentCampaignCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_lastTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unVolun\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"v_lastTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"becomeVolun()\":{\"details\":\"This function `createVolun` allows only the Host to call it hence the `OnlyHost` modifier A host can toggle being a volunteer for campaign mode on, thereby making the profile avaliable for campaign \"},\"checkUpkeep(bytes)\":{\"details\":\"This is the function that the Chainlink Keeper nodes call they look for `upkeepNeeded` to return True. the following should be true for this to return true: 1. It makes sure that the campaign or meeting is not yet completed 2. The time interval has passed for either meeting or campaign.\"},\"constructor\":{\"details\":\"constructor used to assign values that will not change\"},\"createCampaign(string,string)\":{\"details\":\"This function `createCampaign` allows only the User to call it hence the `OnlyUser` modifier after which any avaliable volunteer would be assigned to the campaign\"},\"createHost(uint256,string,string,string)\":{\"details\":\"This function `createHost` any body can call this functions and the senders profile would be set to that of a `Host`\"},\"createSchedule(uint256,uint256,string)\":{\"details\":\"This function `createSchedule` allows only the Host to call it hence the `OnlyHost` modifier after which a Host can create a meeting with some parameters like time and fee needed\"},\"createUser(uint256,string,string,string)\":{\"details\":\"This function `createUser` any body can call this functions and the senders profile would be set to that of a `User`\"},\"endCampaign(uint256)\":{\"details\":\"This function `endCampaign` allows only the User end the campaign\"},\"getHelp(uint256)\":{\"details\":\"This function `getHelo` allows only the User to call it hence the `OnlyUser` modifier after which the Campaign ID is specified and the user would be assigned to the Campaign\"},\"joinCampaign(uint256)\":{\"details\":\"This function `joinCampaign` allows only the User to call it hence the `onlyHost` modifier after which the Campaign ID is specified and the user would be assigned to the Campaign\"},\"joinMeeting(address,uint256)\":{\"details\":\"This function `joinMeeting` allows only the User to call it hence the `OnlyUser` modifier after which the meeting ID is specified and the user would be assigned to the meeting\"},\"performUpkeep(bytes)\":{\"details\":\"Once `checkUpkeep` is returning `true`, this function is called\"},\"unVolun()\":{\"details\":\"This function `unVolun` allows only the Host to call it hence the `OnlyHost` modifier A host can toggle being a volunteer for campaign mode off, thereby making the profile unavaliable for campaign \"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"meetingNum()\":{\"notice\":\"Getter Functions \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/XTELPT.sol\":\"XTELPT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/XTELPT.sol\":{\"content\":\"/**\\r\\n *Submitted for verification at polygonscan.com on 2022-11-04\\r\\n*/\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.7;\\r\\n// import \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\r\\n\\r\\ninterface KeeperCompatibleInterface {\\r\\n    function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\r\\n    function performUpkeep(bytes calldata performData) external;\\r\\n}\\r\\n\\r\\ncontract XTELPT is  KeeperCompatibleInterface {\\r\\n    address owner;\\r\\n\\r\\n    enum XTELPState {\\r\\n        OPEN,\\r\\n        CLOSED\\r\\n    }\\r\\n\\r\\n    uint public counter;    \\r\\n    // Use an i_interval in seconds and a timestamp to slow execution of Upkeep\\r\\n    uint private i_interval;\\r\\n    uint public s_lastTimeStamp;\\r\\n    uint public v_lastTimeStamp;\\r\\n\\r\\n\\r\\n    /* string User Types */\\r\\n    string userType = \\\"User\\\";\\r\\n    string hostType = \\\"Host\\\";\\r\\n    string volunType = \\\"Volun\\\";\\r\\n\\r\\n\\r\\n    /* Campaign and Meeting variables */\\r\\n\\r\\n    mapping(address => meeting[]) public Meeting;\\r\\n\\r\\n    campaign [] public Campaign;\\r\\n\\r\\n\\r\\n    uint256 public campaignIndex;\\r\\n    \\r\\n    uint256 public meetingIndex;    \\r\\n    \\r\\n    /* User profile mapping */\\r\\n    mapping(address => profile) public UserProfile;\\r\\n\\r\\n    /* State mapping */\\r\\n    mapping(address => XTELPState) private s_xtelpState;\\r\\n    mapping(address => XTELPState) private volunState;\\r\\n\\r\\n    /* User Types Arrays */\\r\\n    address [] public AllAccount;\\r\\n\\r\\n    address [] public recentCampaignCreator;\\r\\n\\r\\n\\r\\n    /* Struct */\\r\\n    struct profile {\\r\\n        address addr;\\r\\n        string name;\\r\\n        string role;\\r\\n        uint256 rating;\\r\\n        string bio;\\r\\n        string profilePic;\\r\\n        bool avaliable;\\r\\n        bool volun;\\r\\n    }\\r\\n\\r\\n    struct meeting {\\r\\n        address host;\\r\\n        address user;\\r\\n        uint256 start;\\r\\n        uint256 end;\\r\\n        string desc;\\r\\n        uint256 time;\\r\\n        uint256 fee;\\r\\n        uint256 index;\\r\\n        bool completed;\\r\\n    }\\r\\n\\r\\n\\r\\n    struct campaign {\\r\\n        address [] volunteer;\\r\\n        address user;\\r\\n        uint256 start_time;\\r\\n        uint256 end_time;\\r\\n        uint256 fee;\\r\\n        uint256 index;\\r\\n        bool completed;\\r\\n        string name;\\r\\n        string desc;\\r\\n    }\\r\\n\\r\\n    /* Modifiers */\\r\\n    modifier onlyOwner  {\\r\\n        require(msg.sender == owner);\\r\\n        _;\\r\\n    }\\r\\n   \\r\\n    modifier onlyHost  {\\r\\n        require(keccak256(abi.encodePacked(UserProfile[msg.sender].role)) == keccak256(abi.encodePacked(\\\"Host\\\")), \\\"NOT A HOST\\\");\\r\\n        _;\\r\\n    }\\r\\n   \\r\\n    modifier onlyVolun  {\\r\\n        require(keccak256(abi.encodePacked(UserProfile[msg.sender].role)) == keccak256(abi.encodePacked(\\\"Host\\\")) && UserProfile[msg.sender].avaliable == true , \\\"NOT A VOLUNTEER\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyUser  {\\r\\n        require(keccak256(abi.encodePacked(UserProfile[msg.sender].role)) == keccak256(abi.encodePacked(\\\"User\\\")), \\\"NOT A USER\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    event RequestedID(uint256 indexed requestId);\\r\\n\\r\\n    /**\\r\\n     * @dev constructor used to assign values that will not change\\r\\n     */\\r\\n    constructor() {\\r\\n      \\r\\n        s_lastTimeStamp = block.timestamp;\\r\\n        v_lastTimeStamp = block.timestamp;\\r\\n        s_xtelpState[msg.sender] = XTELPState.OPEN;\\r\\n        volunState[msg.sender] = XTELPState.OPEN;\\r\\n\\r\\n        owner =  msg.sender;\\r\\n    }\\r\\n\\r\\n\\r\\n    /**\\r\\n     * @dev This function `createUser` any body can call this functions and the senders profile\\r\\n     * would be set to that of a `User`\\r\\n     */\\r\\n    function createUser(uint256 _rating, string memory _name, string memory _pic, string memory _bio) public {\\r\\n         if(UserProfile[msg.sender].addr == address(0)){\\r\\n            AllAccount.push(msg.sender);\\r\\n        }\\r\\n        \\r\\n        UserProfile[msg.sender].addr = msg.sender;\\r\\n        UserProfile[msg.sender].name = _name;\\r\\n        UserProfile[msg.sender].rating = _rating;\\r\\n        UserProfile[msg.sender].role = userType;\\r\\n        UserProfile[msg.sender].profilePic = _pic;\\r\\n        UserProfile[msg.sender].bio = _bio;\\r\\n    }\\r\\n\\r\\n    \\r\\n    /**\\r\\n     * @dev This function `createHost` any body can call this functions and the senders profile\\r\\n     * would be set to that of a `Host`\\r\\n     */\\r\\n    function createHost(uint256 _rating, string memory _name, string memory _pic, string memory _bio) public {  \\r\\n        if(UserProfile[msg.sender].addr == address(0)){\\r\\n            AllAccount.push(msg.sender);\\r\\n        }\\r\\n        \\r\\n        s_xtelpState[msg.sender] = XTELPState.OPEN;\\r\\n\\r\\n        UserProfile[msg.sender].addr = msg.sender;\\r\\n        UserProfile[msg.sender].name = _name;\\r\\n        UserProfile[msg.sender].rating = _rating;\\r\\n        UserProfile[msg.sender].role = hostType;\\r\\n        UserProfile[msg.sender].profilePic = _pic;\\r\\n        UserProfile[msg.sender].bio = _bio;\\r\\n    }\\r\\n\\r\\n     /**\\r\\n     * @dev This function `createVolun` allows only the Host to call it hence the `OnlyHost` modifier\\r\\n     * A host can toggle being a volunteer for campaign mode on, thereby making the profile avaliable for campaign \\r\\n     */\\r\\n     function becomeVolun() public onlyHost {\\r\\n       \\r\\n        UserProfile[msg.sender].volun = true;\\r\\n        UserProfile[msg.sender].avaliable = true;\\r\\n    }\\r\\n\\r\\n\\r\\n    /**\\r\\n     * @dev This function `unVolun` allows only the Host to call it hence the `OnlyHost` modifier\\r\\n     * A host can toggle being a volunteer for campaign mode off, thereby making the profile unavaliable for campaign \\r\\n     */\\r\\n    function unVolun() public onlyHost {       \\r\\n        UserProfile[msg.sender].volun = false;\\r\\n        UserProfile[msg.sender].avaliable = false;\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev This function `createSchedule` allows only the Host to call it hence the `OnlyHost` modifier\\r\\n     * after which a Host can create a meeting with some parameters like time and fee needed\\r\\n     */\\r\\n    function createSchedule(uint256 _time, uint256 _fee, string memory _desc) public onlyHost {\\r\\n       \\r\\n        meeting memory NewMeeting;\\r\\n        NewMeeting.host = msg.sender;\\r\\n        NewMeeting.time = _time * 60;\\r\\n        NewMeeting.desc = _desc;\\r\\n        NewMeeting.start = block.timestamp;\\r\\n        NewMeeting.index =  meetingIndex;\\r\\n        NewMeeting.fee = _fee;\\r\\n\\r\\n        i_interval = _time * 60;\\r\\n        s_xtelpState[msg.sender] = XTELPState.OPEN;\\r\\n        Meeting[msg.sender].push(NewMeeting);\\r\\n        meetingIndex ++;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev This function `joinMeeting` allows only the User to call it hence the `OnlyUser` modifier\\r\\n     * after which the meeting ID is specified and the user would be assigned to the meeting\\r\\n     */\\r\\n    function joinMeeting(address _host, uint256 _id) public onlyUser {\\r\\n        Meeting[_host][_id].user = msg.sender;\\r\\n    } \\r\\n\\r\\n    /**\\r\\n     * @dev This function `createCampaign` allows only the User to call it hence the `OnlyUser` modifier\\r\\n     * after which any avaliable volunteer would be assigned to the campaign\\r\\n     */\\r\\n    function createCampaign(string memory _name, string memory _desc) public onlyOwner {\\r\\n        \\r\\n        campaign memory NewCampaign;\\r\\n        NewCampaign.start_time = block.timestamp;\\r\\n        NewCampaign.name = _name;\\r\\n        NewCampaign.index = campaignIndex;\\r\\n        NewCampaign.desc = _desc;\\r\\n        NewCampaign.fee = 0;\\r\\n\\r\\n        i_interval = 1;\\r\\n        s_xtelpState[msg.sender] = XTELPState.OPEN;\\r\\n\\r\\n        Campaign.push(NewCampaign);\\r\\n        \\r\\n        campaignIndex ++;\\r\\n      \\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev This function `getHelo` allows only the User to call it hence the `OnlyUser` modifier\\r\\n     * after which the Campaign ID is specified and the user would be assigned to the Campaign\\r\\n     */\\r\\n    function getHelp(uint256 _id) public onlyUser {\\r\\n        Campaign[_id].user = msg.sender;\\r\\n    } \\r\\n\\r\\n    /**\\r\\n     * @dev This function `joinCampaign` allows only the User to call it hence the `onlyHost` modifier\\r\\n     * after which the Campaign ID is specified and the user would be assigned to the Campaign\\r\\n     */\\r\\n    function joinCampaign(uint256 _id) public onlyVolun {\\r\\n        Campaign[_id].volunteer.push(msg.sender);\\r\\n    } \\r\\n    \\r\\n\\r\\n\\r\\n    /**\\r\\n     * @dev This function `endCampaign` allows only the User end the campaign\\r\\n     */\\r\\n    function endCampaign(uint256 _id) public onlyUser {\\r\\n       Campaign[_id].completed = true;\\r\\n       Campaign[_id].end_time = block.timestamp;\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n    /**\\r\\n     * @dev This is the function that the Chainlink Keeper nodes call\\r\\n     * they look for `upkeepNeeded` to return True.\\r\\n     * the following should be true for this to return true:\\r\\n     * 1. It makes sure that the campaign or meeting is not yet completed\\r\\n     * 2. The time interval has passed for either meeting or campaign.\\r\\n     */\\r\\n   \\r\\n   function checkUpkeep(bytes memory /* checkData */) public view override returns ( bool upkeepNeeded,\\r\\n    bytes memory /* performData */  ) {\\r\\n        \\r\\n        for (uint i = 0; i < AllAccount.length; i++) {\\r\\n            for (uint j = 0; j < Meeting[AllAccount[i]].length; j++) {\\r\\n                if(Meeting[AllAccount[i]][j].time > 0 && Meeting[AllAccount[i]][j].completed == false){\\r\\n                    bool isOpen = XTELPState.OPEN == s_xtelpState[msg.sender];\\r\\n                    bool timePassed = ((block.timestamp - Meeting[AllAccount[i]][j].start) >  Meeting[AllAccount[i]][j].time);\\r\\n                    upkeepNeeded = (isOpen && timePassed);\\r\\n                }\\r\\n                \\r\\n            }\\r\\n        }\\r\\n       \\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Once `checkUpkeep` is returning `true`, this function is called\\r\\n     */\\r\\n    function performUpkeep(bytes calldata /*performData*/) external override {\\r\\n\\r\\n        for (uint i = 0; i < AllAccount.length; i++) {\\r\\n            for (uint j = 0; j < Meeting[AllAccount[i]].length; j++) {\\r\\n               (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\r\\n                require(upkeepNeeded, \\\"Doesn't meet requirement for UpKeep\\\");\\r\\n                Meeting[AllAccount[i]][j].completed = true;\\r\\n                Meeting[AllAccount[i]][j].end = block.timestamp;\\r\\n                s_xtelpState[AllAccount[i]] = XTELPState.CLOSED;\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        \\r\\n        \\r\\n    }\\r\\n   \\r\\n   \\r\\n    /** Getter Functions */\\r\\n\\r\\n    function meetingNum() public view returns (uint256) {\\r\\n        return meetingIndex;\\r\\n    }\\r\\n    \\r\\n    function campaignNum() public view returns (uint256) {\\r\\n        return campaignIndex;\\r\\n    }\\r\\n\\r\\n    function getMeeting(address _prof) public view returns (meeting [] memory) {\\r\\n        return Meeting[_prof];\\r\\n    }\\r\\n      \\r\\n\\r\\n    function getProfile(address userAdd) public view returns (profile memory) {\\r\\n        return UserProfile[userAdd];\\r\\n    }\\r\\n\\r\\n    function getAllAccount() public view returns (address [] memory) {\\r\\n        return AllAccount;\\r\\n    }\\r\\n\\r\\n    function getCampaign() public view returns (campaign [] memory) {\\r\\n        return Campaign;\\r\\n    }\\r\\n    \\r\\n   \\r\\n}\",\"keccak256\":\"0x87cce5cd4ca4eaa180ea24e55a940c47c41f504acb355d4c9622cf2273f67ca6\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c80637d74311c116100f9578063d4a82a5811610097578063e9323db611610071578063e9323db614610505578063f40c48c01461053c578063fc16198d14610546578063fce3f6ac14610562576101c4565b8063d4a82a5814610496578063d7358c5e146104b2578063dd0408ae146104e9576101c4565b80639dc5368d116100d35780639dc5368d1461040e578063b16cfdd41461042c578063c5e0cfd01461045c578063cb40bf601461047a576101c4565b80637d74311c146103a65780637eac3d92146103c2578063960ccccc146103f2576101c4565b8063462d71ff1161016657806361bc221a1161014057806361bc221a1461031b578063680908c9146103395780636e04ff0d14610357578063766c21a214610388576101c4565b8063462d71ff146102d757806356361f0d146102e15780635d5be658146102ff576101c4565b806324b9ed2d116101a257806324b9ed2d146102355780632dd47fc914610265578063348540431461029d5780634585e33b146102bb576101c4565b80630f53a470146101c95780631007e8c7146101f9578063236b8e3a14610217575b600080fd5b6101e360048036038101906101de91906134a8565b61057e565b6040516101f0919061413f565b60405180910390f35b6102016108b6565b60405161020e9190614161565b60405180910390f35b61021f6108bc565b60405161022c919061404b565b60405180910390f35b61024f600480360381019061024a91906134a8565b610b67565b60405161025c919061406d565b60405180910390f35b61027f600480360381019061027a91906134d5565b610d91565b60405161029499989796959493929190613e6f565b60405180910390f35b6102a5610ed1565b6040516102b29190614161565b60405180910390f35b6102d560048036038101906102d09190613515565b610ed7565b005b6102df611200565b005b6102e9611385565b6040516102f69190614161565b60405180910390f35b6103196004803603810190610314919061370b565b61138b565b005b6103236116d9565b6040516103309190614161565b60405180910390f35b6103416116df565b60405161034e9190614161565b60405180910390f35b610371600480360381019061036c9190613562565b6116e9565b60405161037f92919061408f565b60405180910390f35b610390611af4565b60405161039d9190614161565b60405180910390f35b6103c060048036038101906103bb9190613650565b611afa565b005b6103dc60048036038101906103d79190613623565b611e24565b6040516103e99190613e54565b60405180910390f35b61040c60048036038101906104079190613623565b611e63565b005b610416611f97565b6040516104239190614029565b60405180910390f35b61044660048036038101906104419190613623565b612025565b6040516104539190613e54565b60405180910390f35b610464612064565b6040516104719190614161565b60405180910390f35b610494600480360381019061048f91906134d5565b61206e565b005b6104b060048036038101906104ab9190613623565b6121e0565b005b6104cc60048036038101906104c791906134a8565b612395565b6040516104e0989796959493929190613f03565b60405180910390f35b61050360048036038101906104fe9190613623565b612637565b005b61051f600480360381019061051a9190613623565b61276f565b604051610533989796959493929190613f9d565b60405180910390f35b610544612904565b005b610560600480360381019061055b9190613650565b612a89565b005b61057c600480360381019061057791906135ab565b612e1b565b005b610586613051565b600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461063790614440565b80601f016020809104026020016040519081016040528092919081815260200182805461066390614440565b80156106b05780601f10610685576101008083540402835291602001916106b0565b820191906000526020600020905b81548152906001019060200180831161069357829003601f168201915b505050505081526020016002820180546106c990614440565b80601f01602080910402602001604051908101604052809291908181526020018280546106f590614440565b80156107425780601f1061071757610100808354040283529160200191610742565b820191906000526020600020905b81548152906001019060200180831161072557829003601f168201915b505050505081526020016003820154815260200160048201805461076590614440565b80601f016020809104026020016040519081016040528092919081815260200182805461079190614440565b80156107de5780601f106107b3576101008083540402835291602001916107de565b820191906000526020600020905b8154815290600101906020018083116107c157829003601f168201915b505050505081526020016005820180546107f790614440565b80601f016020809104026020016040519081016040528092919081815260200182805461082390614440565b80156108705780601f1061084557610100808354040283529160200191610870565b820191906000526020600020905b81548152906001019060200180831161085357829003601f168201915b505050505081526020016006820160009054906101000a900460ff161515151581526020016006820160019054906101000a900460ff1615151515815250509050919050565b60045481565b60606009805480602002602001604051908101604052809291908181526020016000905b82821015610b5e5783829060005260206000209060090201604051806101200160405290816000820180548060200260200160405190810160405280929190818152602001828054801561098957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161093f575b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff16151515158152602001600782018054610a3b90614440565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6790614440565b8015610ab45780601f10610a8957610100808354040283529160200191610ab4565b820191906000526020600020905b815481529060010190602001808311610a9757829003601f168201915b50505050508152602001600882018054610acd90614440565b80601f0160208091040260200160405190810160405280929190818152602001828054610af990614440565b8015610b465780601f10610b1b57610100808354040283529160200191610b46565b820191906000526020600020905b815481529060010190602001808311610b2957829003601f168201915b505050505081525050815260200190600101906108e0565b50505050905090565b6060600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610d865783829060005260206000209060090201604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482018054610cbc90614440565b80601f0160208091040260200160405190810160405280929190818152602001828054610ce890614440565b8015610d355780601f10610d0a57610100808354040283529160200191610d35565b820191906000526020600020905b815481529060010190602001808311610d1857829003601f168201915b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff16151515158152505081526020019060010190610bc8565b505050509050919050565b60086020528160005260406000208181548110610dad57600080fd5b9060005260206000209060090201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015490806003015490806004018054610e2990614440565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5590614440565b8015610ea25780601f10610e7757610100808354040283529160200191610ea2565b820191906000526020600020905b815481529060010190602001808311610e8557829003601f168201915b5050505050908060050154908060060154908060070154908060080160009054906101000a900460ff16905089565b60035481565b60005b600f805490508110156111fb5760005b60086000600f8481548110610f0257610f01614579565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156111e7576000610f8c604051806020016040528060008152506116e9565b50905080610fcf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc6906140df565b60405180910390fd5b600160086000600f8681548110610fe957610fe8614579565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106110605761105f614579565b5b906000526020600020906009020160080160006101000a81548160ff0219169083151502179055504260086000600f86815481106110a1576110a0614579565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061111857611117614579565b5b9060005260206000209060090201600301819055506001600d6000600f868154811061114757611146614579565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360018111156111ce576111cd61451b565b5b02179055505080806111df906144a3565b915050610eea565b5080806111f3906144a3565b915050610eda565b505050565b60405160200161120f90613e3f565b60405160208183030381529060405280519060200120600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016040516020016112779190613e13565b60405160208183030381529060405280519060200120146112cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c4906140ff565b60405180910390fd5b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160016101000a81548160ff0219169083151502179055506000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160006101000a81548160ff021916908315150217905550565b600a5481565b60405160200161139a90613e3f565b60405160208183030381529060405280519060200120600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016040516020016114029190613e13565b6040516020818303038152906040528051906020012014611458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144f906140ff565b60405180910390fd5b6114606130b0565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050603c846114a59190614328565b8160a001818152505081816080018190525042816040018181525050600b548160e0018181525050828160c0018181525050603c846114e49190614328565b6002819055506000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600181111561154d5761154c61451b565b5b0217905550600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906009020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030155608082015181600401908051906020019061167992919061312a565b5060a0820151816005015560c0820151816006015560e082015181600701556101008201518160080160006101000a81548160ff0219169083151502179055505050600b60008154809291906116ce906144a3565b919050555050505050565b60015481565b6000600b54905090565b6000606060005b600f80549050811015611aee5760005b60086000600f848154811061171857611717614579565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015611ada57600060086000600f85815481106117a2576117a1614579565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061181957611818614579565b5b9060005260206000209060090201600501541180156118e957506000151560086000600f858154811061184f5761184e614579565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106118c6576118c5614579565b5b906000526020600020906009020160080160009054906101000a900460ff161515145b15611ac7576000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600181111561194f5761194e61451b565b5b600060018111156119635761196261451b565b5b149050600060086000600f86815481106119805761197f614579565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106119f7576119f6614579565b5b90600052602060002090600902016005015460086000600f8781548110611a2157611a20614579565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110611a9857611a97614579565b5b90600052602060002090600902016002015442611ab59190614382565b119050818015611ac25750805b955050505b8080611ad2906144a3565b915050611700565b508080611ae6906144a3565b9150506116f0565b50915091565b600b5481565b600073ffffffffffffffffffffffffffffffffffffffff16600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611bf557600f339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b33600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019080519060200190611ccc92919061312a565b5083600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506005600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201908054611d6490614440565b611d6f9291906131b0565b5081600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005019080519060200190611dc692919061312a565b5080600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004019080519060200190611e1d92919061312a565b5050505050565b600f8181548110611e3457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b604051602001611e7290613e2a565b60405160208183030381529060405280519060200120600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201604051602001611eda9190613e13565b6040516020818303038152906040528051906020012014611f30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f27906140bf565b60405180910390fd5b3360098281548110611f4557611f44614579565b5b906000526020600020906009020160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060600f80548060200260200160405190810160405280929190818152602001828054801561201b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611fd1575b5050505050905090565b6010818154811061203557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600a54905090565b60405160200161207d90613e2a565b60405160208183030381529060405280519060200120600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016040516020016120e59190613e13565b604051602081830303815290604052805190602001201461213b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612132906140bf565b60405180910390fd5b33600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061218d5761218c614579565b5b906000526020600020906009020160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6040516020016121ef90613e3f565b60405160208183030381529060405280519060200120600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016040516020016122579190613e13565b604051602081830303815290604052805190602001201480156122cd575060011515600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160009054906101000a900460ff161515145b61230c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123039061411f565b60405180910390fd5b600981815481106123205761231f614579565b5b9060005260206000209060090201600001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600c6020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010180546123de90614440565b80601f016020809104026020016040519081016040528092919081815260200182805461240a90614440565b80156124575780601f1061242c57610100808354040283529160200191612457565b820191906000526020600020905b81548152906001019060200180831161243a57829003601f168201915b50505050509080600201805461246c90614440565b80601f016020809104026020016040519081016040528092919081815260200182805461249890614440565b80156124e55780601f106124ba576101008083540402835291602001916124e5565b820191906000526020600020905b8154815290600101906020018083116124c857829003601f168201915b50505050509080600301549080600401805461250090614440565b80601f016020809104026020016040519081016040528092919081815260200182805461252c90614440565b80156125795780601f1061254e57610100808354040283529160200191612579565b820191906000526020600020905b81548152906001019060200180831161255c57829003601f168201915b50505050509080600501805461258e90614440565b80601f01602080910402602001604051908101604052809291908181526020018280546125ba90614440565b80156126075780601f106125dc57610100808354040283529160200191612607565b820191906000526020600020905b8154815290600101906020018083116125ea57829003601f168201915b5050505050908060060160009054906101000a900460ff16908060060160019054906101000a900460ff16905088565b60405160200161264690613e2a565b60405160208183030381529060405280519060200120600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016040516020016126ae9190613e13565b6040516020818303038152906040528051906020012014612704576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126fb906140bf565b60405180910390fd5b60016009828154811061271a57612719614579565b5b906000526020600020906009020160060160006101000a81548160ff021916908315150217905550426009828154811061275757612756614579565b5b90600052602060002090600902016003018190555050565b6009818154811061277f57600080fd5b90600052602060002090600902016000915090508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050154908060060160009054906101000a900460ff16908060070180546127f390614440565b80601f016020809104026020016040519081016040528092919081815260200182805461281f90614440565b801561286c5780601f106128415761010080835404028352916020019161286c565b820191906000526020600020905b81548152906001019060200180831161284f57829003601f168201915b50505050509080600801805461288190614440565b80601f01602080910402602001604051908101604052809291908181526020018280546128ad90614440565b80156128fa5780601f106128cf576101008083540402835291602001916128fa565b820191906000526020600020905b8154815290600101906020018083116128dd57829003601f168201915b5050505050905088565b60405160200161291390613e3f565b60405160208183030381529060405280519060200120600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160405160200161297b9190613e13565b60405160208183030381529060405280519060200120146129d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129c8906140ff565b60405180910390fd5b6001600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160016101000a81548160ff0219169083151502179055506001600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160006101000a81548160ff021916908315150217905550565b600073ffffffffffffffffffffffffffffffffffffffff16600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612b8457600f339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836001811115612be757612be661451b565b5b021790555033600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019080519060200190612cc392919061312a565b5083600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506006600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201908054612d5b90614440565b612d669291906131b0565b5081600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005019080519060200190612dbd92919061312a565b5080600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004019080519060200190612e1492919061312a565b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612e7357600080fd5b612e7b61323d565b42816040018181525050828160e00181905250600a548160a001818152505081816101000181905250600081608001818152505060016002819055506000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836001811115612f1a57612f1961451b565b5b021790555060098190806001815401808255809150506001900390600052602060002090600902016000909190919091506000820151816000019080519060200190612f679291906132a1565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555060e082015181600701908051906020019061301392919061312a565b5061010082015181600801908051906020019061303192919061312a565b505050600a6000815480929190613047906144a3565b9190505550505050565b604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160608152602001606081526020016000151581526020016000151581525090565b604051806101200160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001606081526020016000815260200160008152602001600081526020016000151581525090565b82805461313690614440565b90600052602060002090601f016020900481019282613158576000855561319f565b82601f1061317157805160ff191683800117855561319f565b8280016001018555821561319f579182015b8281111561319e578251825591602001919060010190613183565b5b5090506131ac919061332b565b5090565b8280546131bc90614440565b90600052602060002090601f0160209004810192826131de576000855561322c565b82601f106131ef578054855561322c565b8280016001018555821561322c57600052602060002091601f016020900482015b8281111561322b578254825591600101919060010190613210565b5b509050613239919061332b565b5090565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160001515815260200160608152602001606081525090565b82805482825590600052602060002090810192821561331a579160200282015b828111156133195782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906132c1565b5b509050613327919061332b565b5090565b5b8082111561334457600081600090555060010161332c565b5090565b600061335b613356846141a1565b61417c565b905082815260208101848484011115613377576133766145e6565b5b6133828482856143fe565b509392505050565b600061339d613398846141d2565b61417c565b9050828152602081018484840111156133b9576133b86145e6565b5b6133c48482856143fe565b509392505050565b6000813590506133db81614722565b92915050565b60008083601f8401126133f7576133f66145dc565b5b8235905067ffffffffffffffff811115613414576134136145d7565b5b6020830191508360018202830111156134305761342f6145e1565b5b9250929050565b600082601f83011261344c5761344b6145dc565b5b813561345c848260208601613348565b91505092915050565b600082601f83011261347a576134796145dc565b5b813561348a84826020860161338a565b91505092915050565b6000813590506134a281614739565b92915050565b6000602082840312156134be576134bd6145f0565b5b60006134cc848285016133cc565b91505092915050565b600080604083850312156134ec576134eb6145f0565b5b60006134fa858286016133cc565b925050602061350b85828601613493565b9150509250929050565b6000806020838503121561352c5761352b6145f0565b5b600083013567ffffffffffffffff81111561354a576135496145eb565b5b613556858286016133e1565b92509250509250929050565b600060208284031215613578576135776145f0565b5b600082013567ffffffffffffffff811115613596576135956145eb565b5b6135a284828501613437565b91505092915050565b600080604083850312156135c2576135c16145f0565b5b600083013567ffffffffffffffff8111156135e0576135df6145eb565b5b6135ec85828601613465565b925050602083013567ffffffffffffffff81111561360d5761360c6145eb565b5b61361985828601613465565b9150509250929050565b600060208284031215613639576136386145f0565b5b600061364784828501613493565b91505092915050565b6000806000806080858703121561366a576136696145f0565b5b600061367887828801613493565b945050602085013567ffffffffffffffff811115613699576136986145eb565b5b6136a587828801613465565b935050604085013567ffffffffffffffff8111156136c6576136c56145eb565b5b6136d287828801613465565b925050606085013567ffffffffffffffff8111156136f3576136f26145eb565b5b6136ff87828801613465565b91505092959194509250565b600080600060608486031215613724576137236145f0565b5b600061373286828701613493565b935050602061374386828701613493565b925050604084013567ffffffffffffffff811115613764576137636145eb565b5b61377086828701613465565b9150509250925092565b600061378683836137ba565b60208301905092915050565b600061379e8383613b98565b905092915050565b60006137b28383613c6b565b905092915050565b6137c3816143b6565b82525050565b6137d2816143b6565b82525050565b60006137e382614248565b6137ed81856142a6565b93506137f883614203565b8060005b83811015613829578151613810888261377a565b975061381b8361427f565b9250506001810190506137fc565b5085935050505092915050565b600061384182614248565b61384b81856142b7565b935061385683614203565b8060005b8381101561388757815161386e888261377a565b97506138798361427f565b92505060018101905061385a565b5085935050505092915050565b600061389f82614253565b6138a981856142c8565b9350836020820285016138bb85614213565b8060005b858110156138f757848403895281516138d88582613792565b94506138e38361428c565b925060208a019950506001810190506138bf565b50829750879550505050505092915050565b60006139148261425e565b61391e81856142d9565b93508360208202850161393085614223565b8060005b8581101561396c578484038952815161394d85826137a6565b945061395883614299565b925060208a01995050600181019050613934565b50829750879550505050505092915050565b613987816143c8565b82525050565b613996816143c8565b82525050565b60006139a782614269565b6139b181856142ea565b93506139c181856020860161440d565b6139ca816145f5565b840191505092915050565b60006139e082614274565b6139ea81856142fb565b93506139fa81856020860161440d565b613a03816145f5565b840191505092915050565b6000613a1982614274565b613a23818561430c565b9350613a3381856020860161440d565b613a3c816145f5565b840191505092915050565b60008154613a5481614440565b613a5e818661431d565b94506001821660008114613a795760018114613a8a57613abd565b60ff19831686528186019350613abd565b613a9385614233565b60005b83811015613ab557815481890152600182019150602081019050613a96565b838801955050505b50505092915050565b6000613ad3600a8361430c565b9150613ade82614606565b602082019050919050565b6000613af660048361431d565b9150613b018261462f565b600482019050919050565b6000613b1960238361430c565b9150613b2482614658565b604082019050919050565b6000613b3c60048361431d565b9150613b47826146a7565b600482019050919050565b6000613b5f600a8361430c565b9150613b6a826146d0565b602082019050919050565b6000613b82600f8361430c565b9150613b8d826146f9565b602082019050919050565b6000610120830160008301518482036000860152613bb682826137d8565b9150506020830151613bcb60208601826137ba565b506040830151613bde6040860182613df5565b506060830151613bf16060860182613df5565b506080830151613c046080860182613df5565b5060a0830151613c1760a0860182613df5565b5060c0830151613c2a60c086018261397e565b5060e083015184820360e0860152613c4282826139d5565b915050610100830151848203610100860152613c5e82826139d5565b9150508091505092915050565b600061012083016000830151613c8460008601826137ba565b506020830151613c9760208601826137ba565b506040830151613caa6040860182613df5565b506060830151613cbd6060860182613df5565b5060808301518482036080860152613cd582826139d5565b91505060a0830151613cea60a0860182613df5565b5060c0830151613cfd60c0860182613df5565b5060e0830151613d1060e0860182613df5565b50610100830151613d2561010086018261397e565b508091505092915050565b600061010083016000830151613d4960008601826137ba565b5060208301518482036020860152613d6182826139d5565b91505060408301518482036040860152613d7b82826139d5565b9150506060830151613d906060860182613df5565b5060808301518482036080860152613da882826139d5565b91505060a083015184820360a0860152613dc282826139d5565b91505060c0830151613dd760c086018261397e565b5060e0830151613dea60e086018261397e565b508091505092915050565b613dfe816143f4565b82525050565b613e0d816143f4565b82525050565b6000613e1f8284613a47565b915081905092915050565b6000613e3582613ae9565b9150819050919050565b6000613e4a82613b2f565b9150819050919050565b6000602082019050613e6960008301846137c9565b92915050565b600061012082019050613e85600083018c6137c9565b613e92602083018b6137c9565b613e9f604083018a613e04565b613eac6060830189613e04565b8181036080830152613ebe8188613a0e565b9050613ecd60a0830187613e04565b613eda60c0830186613e04565b613ee760e0830185613e04565b613ef561010083018461398d565b9a9950505050505050505050565b600061010082019050613f19600083018b6137c9565b8181036020830152613f2b818a613a0e565b90508181036040830152613f3f8189613a0e565b9050613f4e6060830188613e04565b8181036080830152613f608187613a0e565b905081810360a0830152613f748186613a0e565b9050613f8360c083018561398d565b613f9060e083018461398d565b9998505050505050505050565b600061010082019050613fb3600083018b6137c9565b613fc0602083018a613e04565b613fcd6040830189613e04565b613fda6060830188613e04565b613fe76080830187613e04565b613ff460a083018661398d565b81810360c08301526140068185613a0e565b905081810360e083015261401a8184613a0e565b90509998505050505050505050565b600060208201905081810360008301526140438184613836565b905092915050565b600060208201905081810360008301526140658184613894565b905092915050565b600060208201905081810360008301526140878184613909565b905092915050565b60006040820190506140a4600083018561398d565b81810360208301526140b6818461399c565b90509392505050565b600060208201905081810360008301526140d881613ac6565b9050919050565b600060208201905081810360008301526140f881613b0c565b9050919050565b6000602082019050818103600083015261411881613b52565b9050919050565b6000602082019050818103600083015261413881613b75565b9050919050565b600060208201905081810360008301526141598184613d30565b905092915050565b60006020820190506141766000830184613e04565b92915050565b6000614186614197565b90506141928282614472565b919050565b6000604051905090565b600067ffffffffffffffff8211156141bc576141bb6145a8565b5b6141c5826145f5565b9050602081019050919050565b600067ffffffffffffffff8211156141ed576141ec6145a8565b5b6141f6826145f5565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000614333826143f4565b915061433e836143f4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615614377576143766144ec565b5b828202905092915050565b600061438d826143f4565b9150614398836143f4565b9250828210156143ab576143aa6144ec565b5b828203905092915050565b60006143c1826143d4565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561442b578082015181840152602081019050614410565b8381111561443a576000848401525b50505050565b6000600282049050600182168061445857607f821691505b6020821081141561446c5761446b61454a565b5b50919050565b61447b826145f5565b810181811067ffffffffffffffff8211171561449a576144996145a8565b5b80604052505050565b60006144ae826143f4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156144e1576144e06144ec565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e4f542041205553455200000000000000000000000000000000000000000000600082015250565b7f5573657200000000000000000000000000000000000000000000000000000000600082015250565b7f446f65736e2774206d65657420726571756972656d656e7420666f722055704b60008201527f6565700000000000000000000000000000000000000000000000000000000000602082015250565b7f486f737400000000000000000000000000000000000000000000000000000000600082015250565b7f4e4f54204120484f535400000000000000000000000000000000000000000000600082015250565b7f4e4f54204120564f4c554e544545520000000000000000000000000000000000600082015250565b61472b816143b6565b811461473657600080fd5b50565b614742816143f4565b811461474d57600080fd5b5056fea2646970667358221220978d2a8c9936fd8f137bc3b9b15b8d3df2c25977ed9f54980b2e89a9a239cd0664736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "becomeVolun()": {
        "details": "This function `createVolun` allows only the Host to call it hence the `OnlyHost` modifier A host can toggle being a volunteer for campaign mode on, thereby making the profile avaliable for campaign "
      },
      "checkUpkeep(bytes)": {
        "details": "This is the function that the Chainlink Keeper nodes call they look for `upkeepNeeded` to return True. the following should be true for this to return true: 1. It makes sure that the campaign or meeting is not yet completed 2. The time interval has passed for either meeting or campaign."
      },
      "constructor": {
        "details": "constructor used to assign values that will not change"
      },
      "createCampaign(string,string)": {
        "details": "This function `createCampaign` allows only the User to call it hence the `OnlyUser` modifier after which any avaliable volunteer would be assigned to the campaign"
      },
      "createHost(uint256,string,string,string)": {
        "details": "This function `createHost` any body can call this functions and the senders profile would be set to that of a `Host`"
      },
      "createSchedule(uint256,uint256,string)": {
        "details": "This function `createSchedule` allows only the Host to call it hence the `OnlyHost` modifier after which a Host can create a meeting with some parameters like time and fee needed"
      },
      "createUser(uint256,string,string,string)": {
        "details": "This function `createUser` any body can call this functions and the senders profile would be set to that of a `User`"
      },
      "endCampaign(uint256)": {
        "details": "This function `endCampaign` allows only the User end the campaign"
      },
      "getHelp(uint256)": {
        "details": "This function `getHelo` allows only the User to call it hence the `OnlyUser` modifier after which the Campaign ID is specified and the user would be assigned to the Campaign"
      },
      "joinCampaign(uint256)": {
        "details": "This function `joinCampaign` allows only the User to call it hence the `onlyHost` modifier after which the Campaign ID is specified and the user would be assigned to the Campaign"
      },
      "joinMeeting(address,uint256)": {
        "details": "This function `joinMeeting` allows only the User to call it hence the `OnlyUser` modifier after which the meeting ID is specified and the user would be assigned to the meeting"
      },
      "performUpkeep(bytes)": {
        "details": "Once `checkUpkeep` is returning `true`, this function is called"
      },
      "unVolun()": {
        "details": "This function `unVolun` allows only the Host to call it hence the `OnlyHost` modifier A host can toggle being a volunteer for campaign mode off, thereby making the profile unavaliable for campaign "
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "meetingNum()": {
        "notice": "Getter Functions "
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 20,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 25,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "counter",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 27,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "i_interval",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 29,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "s_lastTimeStamp",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 31,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "v_lastTimeStamp",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 34,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "userType",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      },
      {
        "astId": 37,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "hostType",
        "offset": 0,
        "slot": "6",
        "type": "t_string_storage"
      },
      {
        "astId": 40,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "volunType",
        "offset": 0,
        "slot": "7",
        "type": "t_string_storage"
      },
      {
        "astId": 46,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "Meeting",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_array(t_struct(meeting)111_storage)dyn_storage)"
      },
      {
        "astId": 50,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "Campaign",
        "offset": 0,
        "slot": "9",
        "type": "t_array(t_struct(campaign)131_storage)dyn_storage"
      },
      {
        "astId": 52,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "campaignIndex",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 54,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "meetingIndex",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 59,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "UserProfile",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_struct(profile)92_storage)"
      },
      {
        "astId": 64,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "s_xtelpState",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_enum(XTELPState)23)"
      },
      {
        "astId": 69,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "volunState",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_enum(XTELPState)23)"
      },
      {
        "astId": 72,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "AllAccount",
        "offset": 0,
        "slot": "15",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 75,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "recentCampaignCreator",
        "offset": 0,
        "slot": "16",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(campaign)131_storage)dyn_storage": {
        "base": "t_struct(campaign)131_storage",
        "encoding": "dynamic_array",
        "label": "struct XTELPT.campaign[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(meeting)111_storage)dyn_storage": {
        "base": "t_struct(meeting)111_storage",
        "encoding": "dynamic_array",
        "label": "struct XTELPT.meeting[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(XTELPState)23": {
        "encoding": "inplace",
        "label": "enum XTELPT.XTELPState",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_struct(meeting)111_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct XTELPT.meeting[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(meeting)111_storage)dyn_storage"
      },
      "t_mapping(t_address,t_enum(XTELPState)23)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => enum XTELPT.XTELPState)",
        "numberOfBytes": "32",
        "value": "t_enum(XTELPState)23"
      },
      "t_mapping(t_address,t_struct(profile)92_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct XTELPT.profile)",
        "numberOfBytes": "32",
        "value": "t_struct(profile)92_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(campaign)131_storage": {
        "encoding": "inplace",
        "label": "struct XTELPT.campaign",
        "members": [
          {
            "astId": 114,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "volunteer",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 116,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "user",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 118,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "start_time",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 120,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "end_time",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 122,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "fee",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 124,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "index",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 126,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "completed",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 128,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "name",
            "offset": 0,
            "slot": "7",
            "type": "t_string_storage"
          },
          {
            "astId": 130,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "desc",
            "offset": 0,
            "slot": "8",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_struct(meeting)111_storage": {
        "encoding": "inplace",
        "label": "struct XTELPT.meeting",
        "members": [
          {
            "astId": 94,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "host",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 96,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "user",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 98,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "start",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 100,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "end",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 102,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "desc",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 104,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "time",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 106,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "fee",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 108,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "index",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 110,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "completed",
            "offset": 0,
            "slot": "8",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_struct(profile)92_storage": {
        "encoding": "inplace",
        "label": "struct XTELPT.profile",
        "members": [
          {
            "astId": 77,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 79,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 81,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "role",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 83,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "rating",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 85,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "bio",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 87,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "profilePic",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 89,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "avaliable",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 91,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "volun",
            "offset": 1,
            "slot": "6",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}